Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".

Example 2:

Input: s = "applepenapple", wordDict = ["apple", "pen"]
Output: true
Explanation: Return true because "applepenapple" can be segmented as "apple pen apple". Note that you are allowed to reuse a dictionary word.


My optimal Soluion :
 
 class Solution {
public:
    bool wordBreak(string s, vector<string>& d) {
        
        if(d.size() == 0) return false;
        
        vector<bool> res(s.size()+1, false);
        int n = s.size();
        res[0] = 1;
        
        for(int i=1; i<=n; i++)
        {
            for(int j=i-1; j>=0; j--)
            {
                if(res[j])
                {
                    string str = s.substr(j, abs(i-j));
                    if(std::find(d.begin(),d.end(),str) != d.end())
                    {
                        res[i]= 1;
                        break;
                    }
                    
                }
            }
        }
        
        return res[s.size()];
        
    }
};
