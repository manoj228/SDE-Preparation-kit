class Solution {
public:
    void call(vector<int> a,int target,vector<int> ans,vector<vector<int>>& res,int begin)
    {
        if(target == 0)
        {
            res.push_back(ans);
            return;
        }
        
        for(int i=begin; i!=a.size() && target >= a[i]; ++i)
        {
            ans.push_back(a[i]);
            call(a,target-a[i],ans,res,i);
            ans.pop_back();
        }
    }
    
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> res;
        vector<int> ans;
        call(candidates, target, ans, res , 0);
        
        return res;
    }
};
