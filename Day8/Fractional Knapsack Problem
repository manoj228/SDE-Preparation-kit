Input:
2
3
4
1 2 3
4 5 1
3
3
1 2 3
4 5 6
Output:
3
0

My optimal solution :

#include <bits/stdc++.h>
using namespace std;

int main() {
	//code
	int t;
	cin >> t;
	while(t--)
	{
	    int n,w;
	    cin >> n >> w;
	    int v[n],wt[n];
	    for(int i=0;i<n;i++) cin >> v[i];
	    for(int i=0;i<n;i++) cin >> wt[i];
	    
	    int knap[n+1][w+1];
	    for(int i=0;i<=n;i++)
	    {
	        for(int j=0;j<=w;j++)
	        {
	            if(i==0 || j ==0)
	            knap[i][j] = 0;
	            else if(wt[i-1] <= j)
	            knap[i][j] = max(knap[i-1][j] , knap[i-1][j-wt[i-1]]+v[i-1]);
	            else
	            knap[i][j]=knap[i-1][j];
	        }
	    }
	    cout << knap[n][w] << endl;
	}
		return 0;
}
