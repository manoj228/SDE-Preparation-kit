// 1) Two arrays of Same size

// time complexity : O(logn)
// space complexity : O(1)
#include<bits/stdc++.h> 
using namespace std; 

int median(int a[], int n) 
{ 
	if (n % 2 == 0) 
		return (a[n/2] + a[n/2-1]) / 2; 
	else
		return a[n/2]; 
} 

int call(int a[],int b[], int n) 
{ 
	if (n <= 0) 
		return -1; 
	if (n == 1) 
		return (a[0] + b[0]) / 2; 
	if (n == 2) 
		return (max(a[0], b[0]) + min(a[1], b[1]))/2; 
 
	int m1 = median(a, n); 
	int m2 = median(b, n); 

	if (m1 == m2) 
		return m1; 


	if (m1 < m2)
	return call(a+m1, b , n-m1);
	
	else
	return call(a, b+m2, n-m2);
	
} 


int main() 
{ 
	int a[] = {1, 2, 3, 6}; 
	int b[] = {4, 6, 8, 10}; 
	int n = sizeof(a) / sizeof(a[0]); 

	cout << call(a, b, n); 
	
	return 0; 
} 


