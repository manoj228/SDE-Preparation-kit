// Time complexity : O(logn)
// space complexity : O(1)
#include <bits/stdc++.h>
using namespace std;

int bin(vector<int> a,int l,int h,int x)
{
	if(l > h) return -1;
	
	int mid = l + (h - l) / 2;
	
	if(a[mid] == x) return mid;
	
	if(a[l] <= a[mid])
	{
		if(x >= a[l] && x <= a[mid])
		return bin(a, l, mid-1, x);
		
		else
		return bin(a, mid+1, h, x);
	}
	
	
	if(x >= a[mid] && x <= a[h])
	return bin(a, mid+1,h, x);
	
	return bin(a,l,mid-1,x);
}

int main() {
	// your code goes here
	
	vector<int> a { 4, 5, 6, 7, 8, 9, 1, 2, 3 }; 
	
	int n = a.size();
	
	int key = 7;
	
	int r = bin(a,0,n-1,key);
	if(r != -1) cout << "Element position :" << r ;
	else cout << "No element found";
	
	return 0;
}
